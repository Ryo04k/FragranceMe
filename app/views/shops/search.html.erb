<div class="max-w-[1400px] mx-auto">
  <div class="max-w-2xl mx-auto mt-4">
    <%= render "search_form", q: @q, url: search_shops_path %>

    <% if @filtered_shops.any? %>
      <ul class="space-y-6 mt-6">
        <% @filtered_shops.each do |shop| %>
          <li class="flex p-4 border rounded shadow items-center">
            <a href="/shops/<%= shop.id %>" class="flex items-center w-full">
                <div class="mr-4 w-32 h-32 overflow-hidden">
                  <% if shop.photo_urls.any? %>
                    <%= image_tag shop.photo_urls.first, alt: "#{shop.name}の画像", class: "w-full h-full object-cover" %>
                  <% else %>
                    <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                      <span class="text-gray-500">No image</span>
                    </div>
                  <% end %>
                </div>
                <div class="flex flex-col justify-between flex-grow">
                  <h3 class="text-lg font-semibold mb-1"><%= shop.name %></h3>
                  <p class="font-semibold">⭐️<%= shop.rating %></p>
                </div>
            </a>
          </li>
        <% end %>
      </ul>
    <% else %>
      <% if params[:q].present? %>
        <p class="text-center mt-8">ご指定の条件に該当するショップは見つかりませんでした。<br>
        検索条件を変更して、再度検索してください。</p>
      <% end %>
    <% end %>

    <div class="mt-4 mb-4">
      <button class="px-6 py-2 btn btn-primary flex items-center" onclick="showCurrentLocation()">
        <span class="material-symbols-outlined mr-2">my_location</span>
        現在地を表示
      </button>
    </div>

    <div id="map" class="rounded w-full h-96 mb-6"></div>

    <div id="shop-list" class="mb-6">
      <!-- 周辺店舗を表示 -->
    </div>

  </div>
</div>

<script type="text/javascript">
  const googleMapApiKey = "<%= ENV["GOOGLE_API_KEY"] %>";
  let map, marker;
  let shops = <%= @shops_json.html_safe %>;

  function initMap() {
    // 新しい地図オブジェクトを作成
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 14,
    });

    // マーカーのオブジェクトを作成
    marker = new google.maps.Marker({
      map: map,
    });

    showCurrentLocation(); // ユーザーの現在地を取得し、地図上に表示

    // 各ショップのマーカーを作成
    shops.forEach(function(shop) {
      let marker = new google.maps.Marker({
        map: map,
        position: { lat: parseFloat(shop.latitude), lng: parseFloat(shop.longitude) },
        title: shop.name
      });

      // クリックすると情報ウィンドウが開くように設定
      marker.addListener('click', function() {
        const imageUrl = `https://maps.googleapis.com/maps/api/place/photo?maxheight=1000&maxwidth=1000&photo_reference=${shop.image}&key=${googleMapApiKey}`;

        const infoWindowContent = `
          <div class="w-52 p-3 rounded shadow flex flex-col items-center">
            <h3 class="text-sm font-semibold mb-2 text-center">${shop.name}</h3>
            <p class="text-sm font-semibold mb-2">⭐️${shop.rating}</p>
            <img src="${imageUrl}" alt="${shop.name}" class="w-48 h-32 object-cover mb-2">
            <a href="/shops/${shop.id}" class="text-xs w-32 h-0 btn btn-sm btn-outline">詳細を見る</a>
          </div>
        `;

        const infoWindow = new google.maps.InfoWindow({
          content: infoWindowContent
        });

        infoWindow.open(map, marker);
      });
    });
  }

  function showCurrentLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        const userLocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        map.setCenter(userLocation);
        marker.setPosition(userLocation);

        // 周辺店舗を取得
        fetchNearbyShops(userLocation.lat, userLocation.lng);
      }, function() {
        alert('位置情報の取得に失敗しました。');
        map.setCenter({ lat: 35.6803997, lng: 139.7690174 }); // 東京の座標
      });
    } else {
      alert('お使いのブラウザでは地理位置情報の取得がサポートされていません。');
      map.setCenter({ lat: 35.6803997, lng: 139.7690174 }); // 東京の座標
    }
  }

  // ユーザーの現在地に基づいた周辺店舗情報を取得
  function fetchNearbyShops(lat, lng) {
    fetch(`/shops/list?latitude=${lat}&longitude=${lng}`)
      .then(response => response.json()) // レスポンスをJSON形式に変換
      .then(shops => { // JSONデータを受け取る
        displayShopList(shops); // 店舗リストを表示する関数を呼び出す
      })
      .catch(error => console.error('Error:', error));
  }

  function displayShopList(shops) {
    const shopListElement = document.getElementById('shop-list');
    shopListElement.innerHTML = '<h2 class="text-2xl text-center font-bold mb-4">周辺のショップ</h2>';

    if (shops.length > 0) {
      const ul = document.createElement('ul');
      ul.className = "space-y-6";

    shops.forEach(shop => {
      const li = document.createElement('li');
      li.className = "flex p-4 border rounded shadow items-center";

      const imageUrl = shop.image
        ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${shop.image}&key=${googleMapApiKey}`
        : 'path/to/default/image.jpg';

      const shopLink = `/shops/${shop.id}`; // 詳細ページへのリンク作成

      li.innerHTML = `
        <a href="${shopLink}" class="flex items-center w-full">
          <div class="mr-4 w-32 h-32 overflow-hidden">
            <img src="${imageUrl}" alt="${shop.name}" class="w-full h-full object-cover">
          </div>
          <div class="flex flex-col justify-between flex-grow">
            <h3 class="text-lg font-semibold mb-1">${shop.name}</h3>
            <p class="font-semibold">⭐️${shop.rating}</p>
          </div>
        </a>
      `;

      ul.appendChild(li);
    });

      shopListElement.appendChild(ul);
    } else {
      shopListElement.innerHTML += '<p>周辺にショップが見つかりませんでした。</p>';
    }
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap" async defer></script>
