<!-- GoogleMap -->

<div class="max-w-[1400px] mx-auto">
  <div class="max-w-2xl mx-auto">

<button class="px-6 py-2 btn btn-primary flex items-center" onclick="showCurrentLocation()">
  <span class="material-symbols-outlined mr-2">my_location</span>
  現在地を表示
</button>

  <div id="map" class="rounded-xl"></div>
    <div id="shop-list">
      <!-- ここに店舗リストが表示されます -->
    </div>
  </div>
</div>

<script>
  let googleMapApiKey = "<%= ENV["GOOGLE_API_KEY"] %>";
</script>

<style>
#map {
  height: 400px;
  width: 100%%;
}
</style>

<script type="text/javascript">

let map, marker;
let shops = <%= @shops_json.html_safe %>;

function initMap() {
  // 新しい地図オブジェクトを作成
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 14,
  });

  // マーカーのオブジェクトを作成
  marker = new google.maps.Marker({
    map: map,
  });

  showCurrentLocation(); // ユーザーの現在地を取得し、地図上に表示

  // 各ショップのマーカーを作成
  shops.forEach(function(shop) {
    let marker = new google.maps.Marker({
      map: map,
      position: { lat: parseFloat(shop.latitude), lng: parseFloat(shop.longitude) },
      title: shop.name
    });

    // クリックすると情報ウィンドウが開くように設定
marker.addListener('click', function() {
  const imageUrl = `https://maps.googleapis.com/maps/api/place/photo?maxheight=1000&maxwidth=1000&photo_reference=${shop.image}&key=${googleMapApiKey}`;

  const infoWindowContent = `
    <div class="p-3 max-w-xs rounded-lg shadow-md flex flex-col items-center">
       <h3 class="text-lg mb-2 text-center">${shop.name}</h3>
      <img src="${imageUrl}" alt="${shop.name}" class="h-28 object-cover mb-2">
    </div>
  `;

  const infoWindow = new google.maps.InfoWindow({
    content: infoWindowContent
  });

  infoWindow.open(map, marker);
});

    // マーカーをクリックするとウィンドウを表示
    marker.addListener('click', function() {
        updateInfoCard(shop);
    });
  });

}

function showCurrentLocation(){
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      const userLocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      map.setCenter(userLocation);
      marker.setPosition(userLocation);

      // 周辺店舗を取得
      fetchNearbyShops(userLocation.lat, userLocation.lng);
    }, function() {
      alert('位置情報の取得に失敗しました。');
      map.setCenter({ lat: 35.6803997, lng: 139.7690174 }); // 東京の座標
    });
  } else {
    alert('お使いのブラウザでは地理位置情報の取得がサポートされていません。');
    map.setCenter({ lat: 35.6803997, lng: 139.7690174 }); // 東京の座標
  }
}

// ユーザーの現在地に基づいた周辺店舗情報を取得
function fetchNearbyShops(lat, lng) {
  fetch(`/shops/list?latitude=${lat}&longitude=${lng}`)
    .then(response => response.json()) // レスポンスをJSON形式に変換
    .then(shops => { // JSONデータを受け取る
      displayShopList(shops); // 店舗リストを表示する関数を呼び出す
    })
    .catch(error => console.error('Error:', error));
}

function displayShopList(shops) {
  const shopListElement = document.getElementById('shop-list');
  shopListElement.innerHTML = '<h2 class="text-2xl text-center font-bold mb-4">周辺のショップリスト</h2>';

  if (shops.length > 0) {
    const ul = document.createElement('ul');
    ul.className = "space-y-4";

    shops.forEach(shop => {
      const li = document.createElement('li');
      li.className = "flex items-center p-4 border rounded-lg shadow";

      const imageUrl = shop.image
        ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${shop.image}&key=${googleMapApiKey}`
        : 'path/to/default/image.jpg';

        const shopLink = `/shops/${shop.id}`; // 詳細ページへのリンク作成

      li.innerHTML = `
        <a href="${shopLink}" class="flex items-center">
        <img src="${imageUrl}" alt="${shop.name}" class="w-24 h-24 object-cover mr-4">
        <div class="flex flex-col">
          <h3 class="text-lg font-semibold">${shop.name}</h3>
          <p class="text-sm text-gray-500">⭐️${shop.rating}</p>
        </div>
        </a>
      `;

      ul.appendChild(li);
    });

    shopListElement.appendChild(ul);
  } else {
    shopListElement.innerHTML += '<p>周辺に店舗が見つかりませんでした。</p>';
  }
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap" async defer></script>
